{"version":3,"sources":["services/persons.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Persons","persons","searchName","handleDeleteButtonClick","filter","p","name","toString","toLowerCase","includes","map","key","person","Person","style","listStyleType","number","onClick","PersonForm","newName","newNumber","handleNewName","handleNewNumber","handleAddButtonClick","onSubmit","value","onChange","type","Filter","props","handleSearchName","Notification","message","content","className","ReactDOM","render","useState","setPersons","setNewName","setNewNumber","setNewSearchName","setMessage","useEffect","personService","initialPersons","console","log","length","event","preventDefault","nameObject","window","confirm","foundPerson","find","changedNameObject","returnedPerson","newMessage","setTimeout","catch","error","concat","errormessage","request","target","document","getElementById"],"mappings":"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","file":"static/js/main.d10f3796.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\n  const create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\n  const update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\n  const remove = (id) => {\r\n    const request=axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\n  export default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom';\nimport personService from './services/persons'\nimport './index.css'\n\n\nconst Persons = ({persons, searchName, handleDeleteButtonClick}) =>{\n    if(!searchName){\n        return (\n            <div>\n                {persons.map(person => <Person key={person.name} person={person} handleDeleteButtonClick={handleDeleteButtonClick}/>)}      \n            </div>\n        )\n    }\n    return(\n        <div>    \n             {persons.filter(p => p.name.toString().toLowerCase().includes(searchName))\n              .map(p => <Person key={p.name} person={p} handleDeleteButtonClick={handleDeleteButtonClick}/>) }        \n        </div>\n    )\n}\nconst Person = ({person, handleDeleteButtonClick}) =>{\n    return(\n        <div>\n            <li style={{listStyleType: \"none\"}} key={person.name}> {person.name} {person.number}    \n            <button onClick={()=>{handleDeleteButtonClick(person)}}>delete</button>\n            </li>\n        </div>\n    )\n}\nconst PersonForm = ({newName, newNumber, handleNewName, handleNewNumber,handleAddButtonClick}) =>{\n    return(\n        <div>\n            <form onSubmit={handleAddButtonClick}>\n                <div>name: <input             \n                 value={newName} \n                 onChange={handleNewName}\n                /></div>\n                <div>number: <input             \n                 value={newNumber} \n                 onChange={handleNewNumber}\n                /></div>\n            <button type=\"submit\">add</button>\n            </form>\n        </div>\n    )\n}\nconst Filter = (props)=>{\n  return(\n    \n      <div>filter shown with <input value={props.searchName}onChange={props.handleSearchName}/></div>\n    \n  )\n}\n\nconst Notification = ({ message }) => {\n  if (message.content === '') {\n    return null\n  }\n  if(message.type===\"error\")\n  return (\n    <div className=\"error\">\n      {message.content}\n    </div>\n  )\n  return (\n    <div className=\"msg\">\n      {message.content}\n    </div>)\n}\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ searchName, setNewSearchName ] = useState('')\n  const [ message, setMessage ] = useState({content:'', type:''})\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => \n        setPersons(initialPersons)\n      )\n  }, [])\n\n  console.log('render', persons.length, 'persons')\n\n  const handleAddButtonClick = (event) => {\n    event.preventDefault()\n    const nameObject = {\n      name: newName,\n      number: newNumber,\n      id: newName,\n    }\n    let found=false\n    const names=persons.map(person=>person.name)\n    found=names.includes(newName)\n    \n    if(found){\n        if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\n          \n          const foundPerson = persons.find(p => p.name === newName)\n          const changedNameObject = {...foundPerson, number: newNumber}\n          \n          personService\n          .update(foundPerson.id, changedNameObject)\n          .then(returnedPerson =>{\n            setPersons(persons.map(p => p.name === newName ? returnedPerson :p))\n              const newMessage = {\n                content: `The number of ${newName} is updated`,\n                type: 'msg'\n              }\n              setMessage(newMessage)\n              setTimeout(() => {\n                setMessage({content:'',type:''})\n              }, 5000)\n          })\n          .catch(error =>{\n              const newMessage = {\n                content: `Information of ${newName} has already been removed from server.`,\n                type: 'error'\n              }\n              setMessage(newMessage)\n              setTimeout(() => {\n                setMessage({content:'',type:''})\n              }, 5000)\n          })\n          setNewName('')\n          setNewNumber('')              \n        }      \n        else{\n          setNewName('')\n          setNewNumber('')\n        }\n    }else{\n      personService\n      .create(nameObject)\n      .then(data => {\n        setPersons(persons.concat(data))\n        const newMessage = {\n          content: `${newName} is added`,\n          type: 'msg'\n        }\n        setMessage(newMessage)\n        setTimeout(() => {\n          setMessage({content:'',type:''})\n        }, 5000)\n        setNewName('')\n        setNewNumber('')\n      })\n      .catch(error =>{\n        const errormessage = error.request.response\n        const newMessage = {\n          content: `${errormessage}`,\n          type: 'error'\n        }\n        setMessage(newMessage)\n      })\n    }\n  }\n  \n  const handleNewName = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n  const handleNewNumber = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n  const handleSearchName = (event) => {\n    console.log(event.target.value)\n    setNewSearchName(event.target.value)\n  }\n\n  const handleDeleteButtonClick = ( person) => {\n    \n    if (window.confirm(`Delete '${person.name}'?`)) {\n      personService\n      .remove(person.id)\n      .then(data =>{\n        setPersons(persons.filter(p=>p.id!==person.id))\n        const newMessage = {\n          content: `The number of ${person.name} is removed`,\n          type: 'msg'\n        }\n        setMessage(newMessage)\n        setTimeout(() => {\n          setMessage({content:'',type:''})\n        }, 5000)\n        \n      })\n    }\n  }\n\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter  searchName={searchName} handleSearchName={(event)=>handleSearchName(event)}/>\n      <h2>add a new</h2>\n      <PersonForm handleAddButtonClick={(event) => handleAddButtonClick(event)} \n          newName={newName} \n          newNumber={newNumber} \n          searchName={searchName}\n          handleNewName={(event)=>handleNewName(event)} \n          handleNewNumber={(event)=>handleNewNumber(event)} \n          />\n      \n      <h2>Numbers</h2>\n      <Persons persons={persons} \n          searchName={searchName}\n          handleDeleteButtonClick={(event) => handleDeleteButtonClick(event)}\n          />\n    </div>\n  )\n\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}